@startuml findWithPagingSortingSearching

actor Student
participant "ListeningServiceImpl" as ListeningService
participant "LessonSpecification" as LessonSpec
participant "ValidationUtils" as ValidationUtils
participant "ListeningRepository" as Repository

== Lược đồ tuần tự chức năng xem danh sách bài học nghe ==
Student -> ListeningService: findWithPagingSortingSearching(title, status, page, size, sortBy, sortDir, class)
activate ListeningService

ListeningService -> ValidationUtils: validatePageRequestParam(page, size, sortBy, class)
activate ValidationUtils
ValidationUtils --> ListeningService: Validation complete
deactivate ValidationUtils

ListeningService -> ListeningService: Create Pageable and Sort objects

alt Title filter is applied
    ListeningService -> LessonSpec: byTitle(title)
    activate LessonSpec
    LessonSpec --> ListeningService: Specification<Listening>
    deactivate LessonSpec
else No title filter
    ListeningService -> ListeningService: Specification<Listening> is null
end

alt Status filter is applied
    ListeningService -> LessonSpec: hasStatus(status)
    activate LessonSpec
    LessonSpec --> ListeningService: Specification<Listening>
    deactivate LessonSpec
else No status filter
    ListeningService -> ListeningService: Specification<Listening> is null
end

ListeningService -> Repository: findAll(spec, pageable)
activate Repository
Repository --> ListeningService: Page<Listening>
deactivate Repository

loop Map entities to DTOs
    ListeningService -> ListeningService: convertToDTO(entity)
end

ListeningService --> Student: Page<ListeningDTO>
deactivate ListeningService

@enduml
