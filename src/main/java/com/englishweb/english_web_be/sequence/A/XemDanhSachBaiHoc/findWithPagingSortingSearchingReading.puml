@startuml findWithPagingSortingSearching

actor Student
participant "ReadingServiceImpl" as ReadingService
participant "LessonSpecification" as LessonSpec
participant "ValidationUtils" as ValidationUtils
participant "ReadingRepository" as Repository


== Lược đồ tuần tự chức năng xem danh sách bài học đọc ==

Student -> ReadingService: findWithPagingSortingSearching(title, status, page, size, sortBy, sortDir, class)
activate ReadingService

ReadingService -> ValidationUtils: validatePageRequestParam(page, size, sortBy, class)
activate ValidationUtils
ValidationUtils --> ReadingService: Validation complete
deactivate ValidationUtils

ReadingService -> ReadingService: Create Pageable and Sort objects

alt Title filter is applied
    ReadingService -> LessonSpec: byTitle(title)
    activate LessonSpec
    LessonSpec --> ReadingService: Specification<Reading>
    deactivate LessonSpec
else No title filter
    ReadingService -> ReadingService: Specification<Reading> is null
end

alt Status filter is applied
    ReadingService -> LessonSpec: hasStatus(status)
    activate LessonSpec
    LessonSpec --> ReadingService: Specification<Reading>
    deactivate LessonSpec
else No status filter
    ReadingService -> ReadingService: Specification<Reading> is null
end

ReadingService -> Repository: findAll(spec, pageable)
activate Repository
Repository --> ReadingService: Page<Reading>
deactivate Repository

loop Map entities to DTOs
    ReadingService -> ReadingService: convertToDTO(entity)
end

ReadingService --> Student: Page<ReadingDTO>
deactivate ReadingService

@enduml
