@startuml findWithPagingSortingSearching

actor Student
participant "WritingServiceImpl" as WritingService
participant "LessonSpecification" as LessonSpec
participant "ValidationUtils" as Validator
participant "WritingRepository" as Repository


== Lược đồ tuần tự chức năng xem danh sách bài học viết ==
Student -> WritingService: findWithPagingSortingSearching(title, status, page, size, sortBy, sortDir, dtoClass)
activate WritingService

WritingService -> Validator: validatePageRequestParam(page, size, sortBy, dtoClass)
activate Validator
Validator --> WritingService: Validation passed
deactivate Validator

WritingService -> WritingService: Create Pageable and Sort objects

alt Title filter is applied
    WritingService -> LessonSpec: byTitle(title)
    activate LessonSpec
    LessonSpec --> WritingService: Specification<Writing>
    deactivate LessonSpec
else No title filter
    WritingService -> WritingService: Specification<Writing> is null
end

alt Status filter is applied
    WritingService -> LessonSpec: hasStatus(status)
    activate LessonSpec
    LessonSpec --> WritingService: Specification<Writing>
    deactivate LessonSpec
else No status filter
    WritingService -> WritingService: Specification<Writing> is null
end

WritingService -> Repository: findAll(spec, pageable)
activate Repository
Repository --> WritingService: Page<Writing>
deactivate Repository

loop Convert entities to DTOs
    WritingService -> WritingService: convertToDTO(entity)
    activate WritingService
    WritingService --> WritingService: Converted WritingDTO
    deactivate WritingService
end

WritingService --> Student: Page<WritingDTO>
deactivate WritingService

@enduml
