@startuml changePassword

actor User
participant "UserServiceImpl" as UserService
participant "UserRepository" as Repository
participant "PasswordEncoder" as PasswordEncoder

== Change Password ==
User -> UserService: changePassword(id, oldPassword, newPassword)
activate UserService

UserService -> Repository: findById(id)
activate Repository
Repository --> UserService: User (existingUser)
deactivate Repository

alt Check if oldPassword is correct
    UserService -> PasswordEncoder: matches(oldPassword, existingUser.getPassword())
    PasswordEncoder --> UserService: true/false
    alt Incorrect password
        UserService -> UserService: throw RuntimeException("Old password is incorrect.")
    end
end

UserService -> UserService: Encode new password
UserService -> PasswordEncoder: encode(newPassword)
PasswordEncoder --> UserService: encodedNewPassword

UserService -> Repository: save(existingUser)
activate Repository
Repository --> UserService: Saved User
deactivate Repository

UserService --> User: Password changed successfully
deactivate UserService

@enduml
