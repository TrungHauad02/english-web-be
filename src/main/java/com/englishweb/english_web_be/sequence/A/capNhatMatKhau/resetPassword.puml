@startuml resetPassword

actor User
participant "UserServiceImpl" as UserService
participant "OtpVerifiedCache" as OtpVerifiedCache
participant "UserRepository" as Repository
participant "PasswordEncoder" as PasswordEncoder

== Reset Password ==
User -> UserService: resetPassword(email, newPassword, confirmPassword)
activate UserService

UserService -> OtpVerifiedCache: get(email)
activate OtpVerifiedCache
OtpVerifiedCache --> UserService: OTP verification status
deactivate OtpVerifiedCache

alt OTP not verified
    UserService --> User: Throw RuntimeException ("You need to verify the OTP code before changing your password.")
else OTP verified
    UserService -> UserService: Check if newPassword matches confirmPassword
    alt Passwords do not match
        UserService --> User: Throw RuntimeException ("New password and confirm password do not match.")
    else Passwords match
        UserService -> Repository: findByEmail(email)
        activate Repository
        Repository --> UserService: User
        deactivate Repository

        UserService -> PasswordEncoder: encode(newPassword)
        activate PasswordEncoder
        PasswordEncoder --> UserService: HashedPassword
        deactivate PasswordEncoder

        UserService -> Repository: save(user)
        activate Repository
        Repository --> UserService: Saved User
        deactivate Repository

        UserService -> OtpVerifiedCache: remove(email)
        activate OtpVerifiedCache
        OtpVerifiedCache --> UserService: OTP removed
        deactivate OtpVerifiedCache

        UserService --> User: Password reset successful
    end
end

deactivate UserService

@enduml
