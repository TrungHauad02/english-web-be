@startuml LoginFunction

participant PageLogin
participant UserController
participant AuthenticateServiceImpl as AuthenticateService
participant UserRepository
participant PasswordEncoder


== Lược đồ tuần tự chức năng đăng nhập ==

PageLogin -> UserController: POST /api/users/token {UserDTO}
activate UserController

UserController -> AuthenticateService: authenticate(UserDTO)
activate AuthenticateService

AuthenticateService -> UserRepository: findByEmail(dto.getEmail())
activate UserRepository
UserRepository --> AuthenticateService: Optional<User>
deactivate UserRepository

alt  userOptional.isEmpty()
    AuthenticateService -> AuthenticateService: throw AuthenticationException("Email or password is invalid.")
    AuthenticateService --> UserController: throw AuthenticationException
    UserController --> PageLogin: Response (401 Unauthorized, "Email or password is invalid.")
    end

    alt user.getStatus() == StatusEnum.INACTIVE
        AuthenticateService -> AuthenticateService: throw AuthenticationException("Account is inactive.")
        AuthenticateService --> UserController: throw AuthenticationException
        UserController --> PageLogin: Response (403 Forbidden, "Account is inactive.")
    end
        AuthenticateService -> PasswordEncoder: matches(dto.getPassword(), user.getPassword())
        activate PasswordEncoder
        PasswordEncoder --> AuthenticateService: boolean isAuthenticated
        deactivate PasswordEncoder

        alt !isAuthenticated
            AuthenticateService -> AuthenticateService: throw AuthenticationException("Email or password is invalid.")
            AuthenticateService --> UserController: throw AuthenticationException
            UserController --> PageLogin: Response (401 Unauthorized, "Email or password is invalid.")
       end
            AuthenticateService -> AuthenticateService: generateToken(user)
            AuthenticateService -> AuthenticateService: create Authenticate object
            AuthenticateService --> UserController: Authenticate(isAuthenticated, token, role, id)



deactivate AuthenticateService

UserController --> PageLogin: Response (200 OK, {Authenticate})
deactivate UserController

@enduml
