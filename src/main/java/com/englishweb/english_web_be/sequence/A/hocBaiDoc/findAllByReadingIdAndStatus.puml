@startuml findAllByReadingIdAndStatus

actor Student
participant "ReadingQuestionServiceImpl" as ReadingQuestionService
participant "ReadingServiceImpl" as ReadingService
participant "ReadingQuestionRepository" as Repository

== Lược đồ tuần tự chức năng lấy danh sách câu hỏi và danh sách câu trả lời của  bài đọc ==
Student -> ReadingQuestionService: findAllByReadingIdAndStatus(readingId, status)
activate ReadingQuestionService

alt Status is null
    ReadingQuestionService -> ReadingQuestionService: findAllByReadingId(readingId)
    activate ReadingQuestionService
    ReadingQuestionService --> Student: List<ReadingQuestionDTO>
    deactivate ReadingQuestionService
else Status is not null
    ReadingQuestionService -> ReadingService: isExist(readingId)
    activate ReadingService
    ReadingService --> ReadingQuestionService: Reading exists
    deactivate ReadingService

    ReadingQuestionService -> Repository: findAllByReading_IdAndStatus(readingId, status)
    activate Repository
    Repository --> ReadingQuestionService: List<ReadingQuestion>
    deactivate Repository

    loop Convert entities to DTOs
        ReadingQuestionService -> ReadingQuestionService: convertToDTO(entity)
        activate ReadingQuestionService
        ReadingQuestionService --> ReadingQuestionService: ReadingQuestionDTO
        deactivate ReadingQuestionService
    end

    loop Filter answers by status in each DTO
        ReadingQuestionService -> ReadingQuestionService: Filter answers in DTO
        activate ReadingQuestionService
        ReadingQuestionService --> ReadingQuestionService: Updated DTO with filtered answers
        deactivate ReadingQuestionService
    end

    ReadingQuestionService --> Student: List<ReadingQuestionDTO>
end

deactivate ReadingQuestionService

@enduml
