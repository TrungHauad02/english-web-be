@startuml findByIdAndStatus

actor "Teacher" as Teacher
participant "TestServiceImpl" as TestServiceImpl
participant "TestRepository" as TestRepository
participant "TestMixingQuestionServiceImpl" as TestMixingQuestionServiceImpl
participant "TestReadingServiceImpl" as TestReadingServiceImpl
participant "TestListeningServiceImpl" as TestListeningServiceImpl
participant "TestWritingServiceImpl" as TestWritingServiceImpl
participant "TestSpeakingServiceImpl" as TestSpeakingServiceImpl


== Lược đồ tuần tự chức năng lấy bài kiểm tra viết ==
Teacher -> TestServiceImpl: findByIdAndStatus(id, status)
activate TestServiceImpl

alt if status == null

    TestServiceImpl -> TestRepository: findById(id)
    activate TestRepository
    TestRepository --> TestServiceImpl: Optional<Test>
    deactivate TestRepository

    TestServiceImpl -> TestServiceImpl: convertToDTO(test)
    activate TestServiceImpl
    TestServiceImpl --> TestServiceImpl: TestDTO
    deactivate TestServiceImpl

    TestServiceImpl -> TestMixingQuestionServiceImpl: findAllByTestId(id)
    activate TestMixingQuestionServiceImpl
    TestMixingQuestionServiceImpl --> TestServiceImpl: TestMixingQuestionDTO
    deactivate TestMixingQuestionServiceImpl

    TestServiceImpl -> TestReadingServiceImpl: findAllByTestId(id)
    activate TestReadingServiceImpl
    TestReadingServiceImpl --> TestServiceImpl: TestReadingDTO
    deactivate TestReadingServiceImpl

    TestServiceImpl -> TestListeningServiceImpl: findAllByTestId(id)
    activate TestListeningServiceImpl
    TestListeningServiceImpl --> TestServiceImpl: TestListeningDTO
    deactivate TestListeningServiceImpl

    TestServiceImpl -> TestWritingServiceImpl: findAllByTestId(id)
    activate TestWritingServiceImpl
    TestWritingServiceImpl --> TestServiceImpl: TestWritingDTO
    deactivate TestWritingServiceImpl

    TestServiceImpl -> TestSpeakingServiceImpl: findAllByTest_Id(id)
    activate TestSpeakingServiceImpl
    TestSpeakingServiceImpl --> TestServiceImpl: TestSpeakingDTO
    deactivate TestSpeakingServiceImpl

    TestServiceImpl --> Teacher: TestDTO

else

    TestServiceImpl -> TestRepository: findByIdAndStatus(id, status)
    activate TestRepository
    TestRepository --> TestServiceImpl: Test
    deactivate TestRepository

    TestServiceImpl -> TestServiceImpl: convertToDTO(test)
    activate TestServiceImpl
    TestServiceImpl --> TestServiceImpl: TestDTO
    deactivate TestServiceImpl

    TestServiceImpl -> TestMixingQuestionServiceImpl: findAllTestMixingQuestionsByTestIdAndStatus(id, status)
    activate TestMixingQuestionServiceImpl
    TestMixingQuestionServiceImpl --> TestServiceImpl: TestMixingQuestionDTO
    deactivate TestMixingQuestionServiceImpl

    TestServiceImpl -> TestReadingServiceImpl: findAllByTestIdAndStatus(id, status)
    activate TestReadingServiceImpl
    TestReadingServiceImpl --> TestServiceImpl: TestReadingDTO
    deactivate TestReadingServiceImpl

    TestServiceImpl -> TestListeningServiceImpl: findAllByTestIdAndStatus(id, status)
    activate TestListeningServiceImpl
    TestListeningServiceImpl --> TestServiceImpl: TestListeningDTO
    deactivate TestListeningServiceImpl

    TestServiceImpl -> TestWritingServiceImpl: findAllTestWritingByTestIdAndStatus(id, status)
    activate TestWritingServiceImpl
    TestWritingServiceImpl --> TestServiceImpl: TestWritingDTO
    deactivate TestWritingServiceImpl

    TestServiceImpl -> TestSpeakingServiceImpl: findAllTestSpeakingByTestIdAndStatus(id, status)
    activate TestSpeakingServiceImpl
    TestSpeakingServiceImpl --> TestServiceImpl: TestSpeakingDTO
    deactivate TestSpeakingServiceImpl

    TestServiceImpl --> Teacher: TestDTO

end

deactivate TestServiceImpl

@enduml
