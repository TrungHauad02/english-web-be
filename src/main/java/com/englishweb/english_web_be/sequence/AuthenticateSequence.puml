@startuml AuthenticateSequence
actor User
participant "AuthenticateServiceImpl" as AS
participant "UserRepository" as UR

== Authentication Process ==
User -> AS: 1. Authenticate (email, password)
activate AS
AS -> UR: 1.1 findByEmail(email)
activate UR
UR --> AS: 1.2 User found (or not)
deactivate UR

AS -> AS: 1.3 Check if user exists and is active
alt User not found or inactive
    AS -> User: 1.4 Authentication Failed (Email or password is invalid, or account inactive)
    deactivate AS
else User exists and active
    AS -> AS: 1.5 Validate password
    alt Password incorrect
        AS -> User: 1.6 Authentication Failed (Invalid password)
        deactivate AS
    else Password correct
        AS -> AS: 1.7 Generate JWT token
        AS --> User: 1.8 Authentication Success (Token, UserID, Role)
        deactivate AS
    end
end

== Token Introspection ==
User -> AS: 2. Introspec (token)
activate AS
AS -> AS: 2.1 Parse and verify token with SIGNER_KEY
alt Token valid
    AS -> User: 2.2 Valid token
else Token invalid or expired
    AS -> User: 2.3 Invalid token
end
deactivate AS

@enduml
